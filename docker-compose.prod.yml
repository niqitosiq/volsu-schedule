version: '3.7'

services:
  svelte:
    build:
      context: ./frontend/
      dockerfile: Dockerfile.prod
      target: 'production'
    container_name: svelte-container
    ports:
      - '${FRONTEND_PORT}:${FRONTEND_PORT}'
    volumes:
      - /usr/src/app/node_modules
    env_file:
      - .env
    networks:
      - webnet

  nest:
    container_name: nest-container
    build:
      context: ./backend/
      target: 'production'
    volumes:
      - /usr/src/app/node_modules
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - postgresdb

  nginx:
    container_name: nginx-container
    build:
      context: ./nginx/
    ports:
      - '${PROXY_PORT}:${PROXY_PORT}'
      - '443:443'
    volumes:
      - ./logs:/var/log/nginx/
    depends_on:
      - svelte
      - nest
    networks:
      - webnet
    env_file:
      - .env

  postgresdb:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - webnet
    env_file:
      - .env

  redis:
    container_name: redis
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - webnet

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: '${POSTGRES_EMAIL}'
      PGADMIN_DEFAULT_PASSWORD: '${POSTGRES_PASSWORD}'
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - webnet
    env_file:
      - .env

networks:
  webnet:
    driver: bridge
    name: webnet

volumes:
  postgres:
  pgadmin:
